[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "evoseal"
version = "0.1.0"
description = "EVOSEAL: An advanced AI system integrating DGM, OpenEvolve, and SEAL"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    {name = "Kresna Sucandra"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0.1",
    "requests>=2.31.0",
    "GitPython>=3.1.40",
    "structlog>=23.1.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "tqdm>=4.66.0",
    "python-slugify>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.4.0",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.10.0",
    "pylint>=3.1.0",
    "ruff>=0.4.7",
    "pre-commit>=3.6.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.31.0",
    "types-python-dateutil>=2.8.0",
    "flake8-bugbear>=24.2.6",
    "flake8-comprehensions>=3.14.0",
    "pylint-pytest>=1.1.2",
    "pylint-plugin-utils>=0.8.2",
    "commitizen>=3.17.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["evoseal", "evoseal.*"]
exclude = ["tests", "tests.*"]

# Formatting
[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Linting
[tool.flake8]
max-line-length = 88
extend-ignore = "E203, W503"
max-complexity = 18
select = "B,C,E,F,W,T4,B9"
extend-select = "B950"
per-file-ignores = "__init__.py: F401"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pylint."messages control"]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "fixme"
]
max-line-length = 88

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "PL", # pylint
    "RUF100",  # unused noqa
]
ignore = [
    "E203",  # whitespace before ':' (black handles this)
    "W503",  # line break before binary operator (black handles this)
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__ files

# Testing
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=evoseal --cov-report=term-missing"

[tool.coverage.run]
source = ["evoseal"]
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = true
