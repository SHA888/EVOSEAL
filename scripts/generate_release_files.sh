#!/bin/bash
# Generate release files for specified versions

# Function to create release files for a version
create_release_files() {
    local version=$1
    local version_dir="/home/kade/EVOSEAL/releases/$version"
    local timestamp=$(date -d "@$(git show -s --format=%ct $(git rev-parse $version) 2>/dev/null || date +%s)" "+%Y-%m-%d" 2>/dev/null || date "+%Y-%m-%d")
    
    echo "Creating release files for $version in $version_dir..."
    
    # Create version directory
    mkdir -p "$version_dir"
    
    # 1. Create CHANGELOG_EXCERPT.md
    cat > "$version_dir/CHANGELOG_EXCERPT.md" << EOF
# EVOSEAL $version - Release Notes

## Changes in this version

$(git log --pretty=format:'- %s' "v${prev_version}...$version" 2>/dev/null || echo "- Initial release")

*Released on: $timestamp*
EOF

    # 2. Create RELEASE_NOTES.md
    cat > "$version_dir/RELEASE_NOTES.md" << EOF
# EVOSEAL $version Release Notes

## ðŸš€ What's New

$(git log --pretty=format:'- %s' "v${prev_version}...$version" 2>/dev/null || echo "- Initial release")

## ðŸ“… Release Date
$timestamp

## ðŸ”— Useful Links
- [Documentation](https://sha888.github.io/EVOSEAL/)
- [GitHub Repository](https://github.com/SHA888/EVOSEAL)
- [Report Issues](https://github.com/SHA888/EVOSEAL/issues)

---
*This document was automatically generated by the EVOSEAL release process.*
EOF

    # 3. Create RELEASE_CHECKLIST.md
    cat > "$version_dir/RELEASE_CHECKLIST.md" << EOF
# EVOSEAL $version Release Checklist

## Pre-Release Checks
- [ ] All tests are passing
- [ ] Documentation is up to date
- [ ] Version numbers updated in all relevant files
- [ ] Changelog is updated with all changes
- [ ] Dependencies are up to date
- [ ] Security audit completed

## Release Process
- [ ] Create release branch
- [ ] Run build process
- [ ] Run all tests
- [ ] Generate release notes
- [ ] Create git tag
- [ ] Push changes and tag to repository
- [ ] Create GitHub release
- [ ] Update documentation
- [ ] Announce release

## Post-Release
- [ ] Merge release branch to main
- [ ] Update development version
- [ ] Verify deployment
- [ ] Monitor for issues

## Rollback Plan
- [ ] Identify rollback trigger conditions
- [ ] Document rollback steps
- [ ] Test rollback procedure

*Last updated: $(date "+%Y-%m-%d %H:%M:%S")*
EOF

    echo "Created release files for $version"
}

# Process each version
versions=("v0.1.2" "v0.1.3" "v0.2.0")
prev_version="0.1.0"

for version in "${versions[@]}"; do
    create_release_files "$version"
    prev_version="${version#v}"  # Remove 'v' prefix for next iteration
done

echo "Release files generation complete!"
