name: CI

on:
  push:
    branches: [main, 'release/*']
  pull_request:
    branches: [main, 'release/*']
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=evoseal --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      if: success() || failure()  # Always run even if tests fail
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true

  lint:
    name: Lint and Type Check
    needs: test  # Run after tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install development dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test,dev]"
    
    - name: Check code formatting with Black
      run: black --check .
    
    - name: Run Flake8 for style guide enforcement
      run: flake8 .
    
    - name: Run MyPy for static type checking
      run: mypy --install-types --non-interactive evoseal/
    
    - name: Run Ruff for additional linting
      run: ruff check .

  security:
    name: Security Checks
    needs: test  # Run after tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Check for known security vulnerabilities
      run: safety check --full-report
    
    - name: Run Bandit for security issues
      run: bandit -r evoseal/ -c pyproject.toml

  build:
    name: Build Package
    needs: [test, lint, security]  # Run after all other jobs
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: |
        python -m build
        ls -la dist/
