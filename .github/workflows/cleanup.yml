name: Cleanup Metrics and Releases

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:  # Allow manual triggering
  workflow_run:
    workflows: ["CI"]
    branches: [main, 'release/*']
    types: [completed]

jobs:
  cleanup:
    # Only run if the CI workflow was successful or on schedule/workflow_dispatch
    if: >
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule' ||
      (github.event.workflow_run.conclusion == 'success' && 
       (github.event.workflow_run.head_branch == 'main' || 
        startsWith(github.event.workflow_run.head_branch, 'release/')))
    
    # Use the production environment
    environment: production
    
    # Required permissions
    permissions:
      contents: read
      actions: read
      packages: write  # For cleaning up old packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run cleanup script
      run: |
        python scripts/cleanup_metrics.py

    - name: Commit and push changes
      run: |
        git config --global user.name 'EVOSEAL Cleanup Bot'
        git config --global user.email 'bot@evoseal.ai'
        
        # Only commit if there are changes
        git diff --quiet && git diff --staged --quiet || \
          (git add . && \
           git commit -m "chore: run automated cleanup [skip ci]" && \
           git push)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
